//
// Generated by CocoaPods-Keys
// on 09/12/2015
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "AdventcalendarKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation AdventcalendarKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(AdventcalendarKeys *, SEL) = NULL;

  if ([key isEqualToString:@"amazonS3AccessKey"]) {
    implementation = _podKeysf8552d4bd5308e6ab0bf259de8c0c1c2;
  }

  if ([key isEqualToString:@"amazonS3SecretSecret"]) {
    implementation = _podKeys5dadf9585e2b8dae56e93c3d52998244;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysf8552d4bd5308e6ab0bf259de8c0c1c2(AdventcalendarKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { AdventcalendarKeysData[53], AdventcalendarKeysData[410], AdventcalendarKeysData[1049], AdventcalendarKeysData[1042], AdventcalendarKeysData[1275], AdventcalendarKeysData[570], AdventcalendarKeysData[1568], AdventcalendarKeysData[119], AdventcalendarKeysData[1440], AdventcalendarKeysData[1342], AdventcalendarKeysData[827], AdventcalendarKeysData[66], AdventcalendarKeysData[1382], AdventcalendarKeysData[1259], AdventcalendarKeysData[614], AdventcalendarKeysData[101], AdventcalendarKeysData[61], AdventcalendarKeysData[404], AdventcalendarKeysData[915], AdventcalendarKeysData[1286], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys5dadf9585e2b8dae56e93c3d52998244(AdventcalendarKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { AdventcalendarKeysData[1524], AdventcalendarKeysData[1308], AdventcalendarKeysData[1326], AdventcalendarKeysData[951], AdventcalendarKeysData[263], AdventcalendarKeysData[285], AdventcalendarKeysData[1047], AdventcalendarKeysData[1458], AdventcalendarKeysData[1074], AdventcalendarKeysData[550], AdventcalendarKeysData[90], AdventcalendarKeysData[250], AdventcalendarKeysData[432], AdventcalendarKeysData[48], AdventcalendarKeysData[1051], AdventcalendarKeysData[1265], AdventcalendarKeysData[503], AdventcalendarKeysData[487], AdventcalendarKeysData[1214], AdventcalendarKeysData[281], AdventcalendarKeysData[1295], AdventcalendarKeysData[328], AdventcalendarKeysData[1363], AdventcalendarKeysData[1349], AdventcalendarKeysData[62], AdventcalendarKeysData[604], AdventcalendarKeysData[671], AdventcalendarKeysData[846], AdventcalendarKeysData[1224], AdventcalendarKeysData[238], AdventcalendarKeysData[463], AdventcalendarKeysData[530], AdventcalendarKeysData[1179], AdventcalendarKeysData[56], AdventcalendarKeysData[441], AdventcalendarKeysData[1248], AdventcalendarKeysData[533], AdventcalendarKeysData[743], AdventcalendarKeysData[141], AdventcalendarKeysData[1447], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char AdventcalendarKeysData[1602] = "1EkfVhoR6uU1c2B2GVCUjDV6HqxXAQlbnxoBnA94BRcuegwRLx8tpAOsRKyvsBGF9sWDNZVEfsoU/xjizwG8V6vjPiGToaDRCtU0Q6JPku3GT5PzheQidb5Ih/bGwsdRbNvBhwEGiZoCzY17PVtykF2uvMWc0ysEY2OV6Hv+Jxv5qDI+45+nBILvENnKu5bBGSvewBz4YUY0r0yUbDU67sA7sPw9MvTvq1dUzPwdRCMjpJrouvSNxhqnIOJQZWO05UkegO7DI/hrtEtp3PwI4fVRyNNZtLWl3Arp0QavaAAr9ShYRxGOgTWkqfD6FMqcgVDrBQP/0ksz8yM0IpJ8nwo6bzG2f3AeKIu3BhhBLL5dlHIFB0eEd5zp7gIBPF2gSDvJXjSN+KGJmSl2jqzNSLQcnEK8DO2gUOB5CuO4yywPL1kCZ4Y9dLd3MEQ68C5cP1KPrHLqHxWJIqD39z5/wggSs5PQkNYg5XSgPh8VqvM9keNlRTHuEgtj6CDtHkg5DXmI7W7xF11b6f1xPbaDuf++46ucR8sn7vEuxPY3L/ETX0vQ0O8KS3EejU48SlRvQE9ieYyezpD/GRIGoQCGhxzwmOszsDWtnjomZxPHrrYEkSILGBwU8yrrttAKc5kpOkWo3giARcDIgqjSqnaX58kns0kJIu9OFw1z/dx6xsM/Q0HmK6EXQRkXPIlVt7lMtoakdms+M6gbWAnCRetTSplq30EgxPCh5sO5xEX9kYoFOpBYOsWZ6jWYk81QYFfDkTVSN+rx9iKRTl2E8kQLngJSw1OuVZR1XRTR/y1mWf8XFvLmgrkonxaHzQVRr6hGw+BsRzF2pcc9PzYOZ66AhNTAtQGfI+ctR4xmaSh39TxeBJ+ggRA9VLyGauIEOQ9p7q19+MxZh7CKK6MLfyjM47r9SBnd9g6AfWWxISxdywSGqIbqFfRReLG9EtKREdBjHpkiZdJDv8frl9FI+Qa6rm7SdGVng2aShdxeM5RHy/CcGZTS/y8dJTMmMeOomb41XFOX2D5rdUvvvjBpaLAmWUWYCIO7hm9U+ZwE4nwx6QEt02lv1YhK6KjWzLI6Z1GAwCbLHrZsBqlCODrtkUzDQCbGcjiC2sM+ZP6x9ikK3wxM8B8m6jcUVsmxPDY8EuoSV+8hkka3L8vQaOUE1qizxTiLNGB727KefenxwOsHrakvl021bskPi9qrk9cRdkCl2YVoYCc63PS9FSWYFkpNUZogWWYTqyaCr2LUFT4aeJuVOt/W1Crs5LhOEApJgJbu7qyXSxQIkFk2cSrHYNzdjBBqL+LfbA5kMQSRxuhXEVFij7iXPVUUMWTLSDaa0FHYJWG9r46Xuwg6rNSNScwnj9EFRWoP9mjKNQJ0x/J/BLCsWtrDEGGncFal2w5RnWhSRmJ39mcW+Llrr8J2VzL5GZN6KD/I7TekAEj3wsA8h2gtyfQyQDILo904QlU4KpEKyn7TQOwCePOMEb8/E4VBz4NlTquZlp3KkYWbqBYBT65azi11qIk6+t3WP71ekWmoiqXuejU/oAaKTkXRvcPzA5pDX6LJJwbz76yfo6FwnQI4f7surqxvPxETle7Kz2QE\\\"";

- (NSString *)description
{
  return [@{
            @"amazonS3AccessKey": self.amazonS3AccessKey,
            @"amazonS3SecretSecret": self.amazonS3SecretSecret,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
